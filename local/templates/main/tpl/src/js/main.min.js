'use strict';

var arPoints = void 0;
App = {};

$(document).ready(function () {

	wSlider();

	sticky();

	dropScroll();

	artSlider();

	header();

	mCont();

	pSlider();

	scrollbar();

	map();

	newsBanner();

	headerScroll();

	aos();

	mContTabs();

	firstScreen();

	//anchors();

	ajaxMore();

	if ($('#map').length > 0) {
		App.points.init(arPoints);
	}
});

App.points = {
	data: null,
	initial: null,
	marker: null,
	map: null,
	filterUrl: null,
	init: function init(config) {
		App.points.data = config['groups'];
		App.points.initial = config['initial'];
		App.points.marker = config['marker'];
		App.points.filterUrl = config['filterUrl'];

		//App.points.onSelectPoint();
	},
	initMap: function initMap() {
		App.points.map = new ymaps.Map("map", {
			center: [55.807304, 37.583688],
			zoom: 9,
			controls: []
		});
		App.points.map.behaviors.disable('scrollZoom');
		//App.points.map.controls.geoObjects.add('zoomControl', {left: '0', top: '5px'});

		if (App.points.initial) {
			ymaps.geocode(App.points.initial).then(function (res) {
				App.points.map.panTo(res.geoObjects.get(0).geometry.getCoordinates());
			});
		}
		App.points.addpoints();
	},
	addpoints: function addpoints() {
		App.points.map.geoObjects.removeAll();
		App.points.data.forEach(function (group) {

			group['points'].forEach(function (point) {
				var placemark = new ymaps.Placemark(point.coords.map(function (x) {
					return parseFloat(x);
				}), {
					balloonContentBody: '<div class="marker__descr"> ' + '<div class="marker__descr-name">' + point.name + '</div> ' + '<div class="marker__descr-content">' + '<span class="address">' + point.address + '</span>' + '<span>Телефон: <a href="tel:' + point.phone + '">' + point.phone + '</a></span>' + '<span>Почта: <a href="mailto:' + point.email + '">' + point.email + '</a></span>' + '<span>Сайт: <a target="_blank" href="mailto:' + point.url + '">' + point.url + '</a></span>' + '</div>  ' + '</div>'
				}, {
					iconLayout: 'default#image',
					iconImageHref: App.points.marker,
					iconImageSize: [72, 62]
				});
				placemark.properties.set('address', point.address);
				App.points.map.geoObjects.add(placemark);
			});
		});

		/*if (App.points.initial) {
            var tmp = $('#cities-list option[value="' + App.points.initial + '"]');
            if (tmp.length) {
                tmp.attr('selected', '');
            }
        }
        $('.select-point').trigger('refresh');*/
	},
	onSelectPoint: function onSelectPoint() {

		var $that = $(this);

		var section_id = $that.find('.m-cont__title-checked-name').val();
		var section_name = $that.find('.m-cont__title-checked-name').text();

		$.ajax({
			url: window.location.href,
			data: {
				city_id: section_id,
				city_name: section_name
			},
			type: 'GET',
			dataType: 'html',
			success: function success(data) {

				$(".m-cont__tabs-content").hide();
				$(".ajax-script").remove();
				$(".m-cont__tabs-content").html(data);
				$(".m-cont__tabs-content").fadeIn();

				App.points.init(arPoints);

				if (App.points.initial) {
					ymaps.geocode(App.points.initial).then(function (res) {
						App.points.map.panTo(res.geoObjects.get(0).geometry.getCoordinates(), { flying: false });
					});
				}

				App.points.addpoints();
			}

		});
	}
};

$(window).on('load', function () {
	if ($('#map').length > 0) {
		ymaps.ready(App.points.initMap);
	}
});

var wSlider = function wSlider() {

	$('.w-slider__scene').each(function () {

		var scene = $(this);
		var navigation = scene.parents('.w-slider').find('.w-slider__arrows');
		var counter = scene.parents('.w-slider').find('.w-slider__counter');

		$('.w-slider__slide').each(function () {

			var index = $(this).index();
			$(this).attr('data-index', index);
		});

		var owlCount = function owlCount(event) {
			var index = $('.owl-item.active .w-slider__slide').attr('data-index');

			counter.find('.w-slider__counter-value').text('0' + event.item.count);

			if (index !== undefined) {
				counter.find('.w-slider__counter-current').text('0' + (+index + 1));
			}

			scene.parents('.w-slider').find('.w-slider__counter-line span').css({
				'animation': 'none'
			});

			scene.parents('.w-slider').find('.w-slider__counter-line span').removeClass('animated');
			scene.parents('.w-slider').find('.w-slider__counter-line span').removeAttr('style');
			scene.trigger('stop.owl.autoplay');

			var timeout = setTimeout(function () {
				scene.parents('.w-slider').find('.w-slider__counter-line span').addClass('animated');
				scene.trigger('play.owl.autoplay');

				clearInterval(timeout);
			}, 1);
		};

		scene.owlCarousel({
			items: 1,
			nav: true,
			dots: false,
			navText: '',
			navElement: 'a',
			navContainer: navigation,
			navClass: ['w-slider__arr w-slider__arr--prev', 'w-slider__arr w-slider__arr--next'],
			loop: true,
			onInitialized: owlCount,
			onTranslated: owlCount,

			autoplay: true,
			autoplayTimeout: 5000,
			autoplayHoverPause: false
		});
	});
};

var sticky = function sticky() {

	if ($(window).width() > 1279) {}
};

var dropScroll = function dropScroll() {

	$('.m-cont__drop').mCustomScrollbar();
};

var artSlider = function artSlider() {

	$('.art-slider__scene').each(function () {

		var scene = $(this);
		var navigation = scene.parents('.art-slider').find('.art-slider__arrows');
		var counter = scene.parents('.art-slider').find('.art-slider__counter');

		$('.art-slider__slide').each(function () {

			var index = $(this).index();
			$(this).attr('data-index', index);
		});

		var owlCount = function owlCount(event) {
			var index = $('.owl-item.active .art-slider__slide').attr('data-index');

			counter.find('.w-slider__counter-value').text('0' + event.item.count);

			if (index !== undefined) {
				counter.find('.w-slider__counter-current').text('0' + (+index + 1));
			}

			scene.parents('.art-slider').find('.w-slider__counter-line span').css({
				'animation': 'none'
			});

			scene.parents('.art-slider').find('.w-slider__counter-line span').removeClass('animated');
			scene.parents('.art-slider').find('.w-slider__counter-line span').removeAttr('style');
			scene.trigger('stop.owl.autoplay');

			var timeout = setTimeout(function () {
				scene.parents('.art-slider').find('.w-slider__counter-line span').addClass('animated');
				scene.trigger('play.owl.autoplay');

				clearInterval(timeout);
			}, 1);
		};

		scene.owlCarousel({
			items: 1,
			nav: true,
			navText: '',
			dots: false,
			navElement: 'a',
			navContainer: navigation,
			navClass: ['art-slider__arrow art-slider__arrow--prev', 'art-slider__arrow art-slider__arrow--next'],
			loop: true,
			autoplay: true,
			autoplayTimeout: 5000,
			autoplayHoverPause: false,
			onInitialized: owlCount,
			onTranslated: owlCount
		});
	});
};

var header = function header() {

	$('body').on('click', '.header__burger', function () {

		$(this).toggleClass('is-opened');
		$('.header__menu').toggleClass('is-opened');
		$('.header__logo').toggleClass('is-active');
	});

	$('body').on('click', '.header__nav-link', function () {

		$('.header__burger').removeClass('is-opened');
		$('.header__menu').removeClass('is-opened');
		$('.header__logo').removeClass('is-active');
	});
};

var mCont = function mCont() {

	$('body').on('click', '.m-cont__title-checked-name', function () {

		$(this).toggleClass('is-active');
		$('.m-cont__drop').toggleClass('is-visible');
	});

	$('body').on('click', '.m-cont__drop-link--main', function () {

		var name = $(this).text();
		var id = $(this).data('id');
		var href = $('.m-cont__button .button').attr('href').split('?')[0];

		$('.m-cont__title-checked-name').text(name);
		$('.m-cont__button .button').attr('href', href + '?city_name=' + name);

		$('.m-cont__drop').removeClass('is-visible');

		return false;
	});

	$('body').on('click', '.m-cont__drop-link--map', function () {

		var $that = $(this);

		var section_id = $that.data('id');
		var section_name = $that.text();

		$.ajax({
			url: window.location.href,
			data: {
				city_id: section_id,
				city_name: section_name
			},
			type: 'GET',
			dataType: 'html',
			success: function success(data) {

				$('.m-cont__title-checked-name').text(section_name);
				$('.m-cont__drop').removeClass('is-visible');

				$(".m-cont__tabs-content").hide();
				$(".ajax-script").remove();
				$(".m-cont__tabs-content").html(data);
				$(".m-cont__tabs-content").fadeIn();

				App.points.init(arPoints);

				if (App.points.initial) {
					ymaps.geocode(App.points.initial).then(function (res) {
						App.points.map.panTo(res.geoObjects.get(0).geometry.getCoordinates(), { flying: false });
					});
				}

				App.points.addpoints();
			}

		});
		return false;
	});

	$('body').on('click', '.m-cont__tabs-item-title', function () {

		var lat_lng = $(this).data('points').split(',').map(function (i) {
			return parseFloat(i);
		});
		App.points.map.panTo(lat_lng);

		return false;
	});
};

var pSlider = function pSlider() {

	$('.p-slider__scene').owlCarousel({
		items: 1,
		nav: true,
		navText: '',
		loop: true,
		navClass: ['p-slider__arr p-slider__arr--prev', 'p-slider__arr p-slider__arr--next'],
		navElement: 'a',
		// mouseDrag: false
		onInitialize: function onInitialize() {
			var indx = void 0;
			var that = $(this);
			$('.p-slider__slide').each(function () {

				if ($(this).hasClass('active')) {
					indx = $(this).data('index');

					clearInterval(timer);

					$('.owl-item').not('.active').removeClass('animated bounceInRight');
					$(this).parent().addClass('animated bounceInRight');

					var timer = setTimeout(function () {
						$('.owl-item').not('.active').removeClass('animated bounceInRight');
						clearInterval(timer);
					}, 1000);

					setTimeout(function () {
						$('.p-slider__scene').trigger('to.owl.carousel', indx);
					}, 100);
				}
			});
		}
	});

	$('body').on('click', '.p-slider__arr--next', function () {

		updateSlider();
	});

	$('body').on('click', '.p-slider__arr--prev', function () {
		updateSlider();
	});

	function updateSlider() {

		clearInterval(timer);
		$('.owl-item').not('.active').removeClass('animated bounceInRight');
		$('.owl-item.active').addClass('animated bounceInRight');

		var timer = setTimeout(function () {
			$('.owl-item').not('.active').removeClass('animated bounceInRight');
			clearInterval(timer);
		}, 1000);

		$.ajax({
			type: "POST",
			url: window.location.href,
			dataType: "html",
			data: { 'id': $('.owl-item.active').find('.p-slider__slide').data('id') },
			cache: false,
			error: function error() {
				console.log("Error loading more");
			},
			success: function success(loadHtml) {
				//window.history.pushState({page: url}, null, url);
				$('.product-cards').find('.js-show-more').remove();
				$('#product-container').html(loadHtml);
			},
			complete: function complete() {
				$('.scrollbar').mCustomScrollbar();
			}
		});
	}
};

var scrollbar = function scrollbar() {

	$('.scrollbar').mCustomScrollbar();
};

var newsBanner = function newsBanner() {

	$('.news-banner__scene').owlCarousel({
		items: 1,
		nav: true,
		navElement: 'a',
		navText: '',
		navClass: ['news-banner__arr news-banner__arr--prev', 'news-banner__arr news-banner__arr--next']
	});
};

var headerScroll = function headerScroll() {

	$(window).on('scroll', function () {

		var scrolled = $(window).scrollTop();

		if (scrolled > 300) {
			$('.header').addClass('header--scrolled');
		} else {
			$('.header').removeClass('header--scrolled');
		}
	});
};

var aos = function aos() {
	AOS.init();
};

var mContTabs = function mContTabs() {

	$('.m-cont__tabs-button').on('click', function () {

		$('.m-cont__tabs-button').removeClass('is-active');
		$(this).addClass('is-active');

		var type = $(this).attr('data-tab');

		$('.m-cont__tabs-content-item').fadeOut(300, function () {

			$('#' + type).fadeIn();
		});
	});

	$('.m-cont__tabs-content').mCustomScrollbar();

	$('.m-cont__tabs-opener').on('click', function () {
		$(this).toggleClass('is-active');
		$('.m-cont__tabs-content').slideToggle();
	});
};

var firstScreen = function firstScreen() {

	if ($('.welcome').length > 0 && $(window).width() > 1279) {

		var welcome = $('.welcome');
		var content = welcome.next('.container');
		var startOffset = $('.welcome').height();
		var overlay = $('.overlay');

		$(window).on('scroll load', function () {

			var scrolled = $(window).scrollTop();

			if (scrolled <= startOffset) {

				var percent = 1 - scrolled / startOffset;

				overlay.css({
					opacity: percent
				});

				content.css({
					'top': '0',
					'position': 'fixed',
					'left': '50%',
					'transform': 'translateX(-50%)'
				});

				welcome.css({
					'margin-bottom': '2000px'
				});
			} else {
				AOS.init();
				welcome.css({
					'margin-bottom': '0px'
				});
				content.removeAttr('style');
				$(".m-content__promo").stick_in_parent();

				overlay.css({
					opacity: '0'
				});
			}
		});
	}
};

/*const anchors = () => {

    $(function () {
        $('.scroll').on('click', function (e) {
            e.preventDefault();
            $('html,body').animate({
                scrollTop: $($(this).attr('href')).offset().top + 'px'
            }, 1100, 'swing');

        });

        if (window.location.hash) {

            // smooth scroll to the anchor id
            $('html,body').animate({
                scrollTop: $(window.location.hash).offset().top + 'px'
            }, 1100, 'swing');

        }
    });

};   */

Share = {
	vkontakte: function vkontakte(purl, ptitle, pimg, text) {
		url = 'http://vk.com/share.php?';
		url += 'url=http://' + encodeURIComponent(purl);
		url += '&title=' + encodeURIComponent(ptitle);
		Share.popup(url);
	},
	odnoklassniki: function odnoklassniki(purl, text) {
		url = 'http://www.odnoklassniki.ru/dk?st.cmd=addShare&st.s=1';
		url += '&st.comments=' + encodeURIComponent(text);
		url += '&st._surl=' + encodeURIComponent(purl);
		Share.popup(url);
	},
	facebook: function facebook(purl, ptitle, pimg, text) {
		url = 'http://www.facebook.com/sharer.php?';
		url += 'u=' + encodeURIComponent(purl);
		url += '&title=' + encodeURIComponent(ptitle);
		url += '&description=' + encodeURIComponent(text);
		url += '&picture=' + encodeURIComponent(pimg);
		Share.popup(url);
	},
	telegram: function telegram(purl, ptitle, pimg, text) {
		url = 'https://telegram.me/share/url?';
		url += 'url=' + encodeURIComponent(purl);
		url += '&text=' + encodeURIComponent(ptitle);
		url += '&description=' + encodeURIComponent(text);
		url += '&image=' + encodeURIComponent(pimg);
		url += '&noparse=true';
		Share.popup(url);
	},
	twitter: function twitter(purl, ptitle) {
		url = 'http://twitter.com/share?';
		url += 'text=' + encodeURIComponent(ptitle);
		url += '&url=' + encodeURIComponent(purl);
		url += '&counturl=' + encodeURIComponent(purl);
		Share.popup(url);
	},
	mailru: function mailru(purl, ptitle, pimg, text) {
		url = 'http://connect.mail.ru/share?';
		url += 'url=' + encodeURIComponent(purl);
		url += '&title=' + encodeURIComponent(ptitle);
		url += '&description=' + encodeURIComponent(text);
		url += '&imageurl=' + encodeURIComponent(pimg);
		Share.popup(url);
	},
	google: function google(purl) {
		url = 'https://plus.google.com/share?';
		url += 'url=' + encodeURIComponent(purl);
		Share.popup(url);
	},

	popup: function popup(url) {
		window.open(url, '', 'toolbar=0,status=0,width=626,height=436');
	}
};

var ajaxMore = function ajaxMore() {

	$('body').on('click', '.js-show-more', function (e) {
		e.preventDefault();
		var url_more = $(this).attr("href");

		$.ajax({
			type: "POST",
			url: url_more,
			dataType: "html",
			cache: false,
			data: { 'id': $('.owl-item.active').find('.p-slider__slide').data('id') },
			error: function error() {
				console.log("Error loading more");
			},
			success: function success(loadHtml) {
				//window.history.pushState({page: url}, null, url);
				$('.product-cards').find('.js-show-more').remove();
				$('.product-cards__row').append(loadHtml);
			}
		});
	});
};